plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/releases/'
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "rtx-mod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API with rendering extensions
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-rendering-v1:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-renderer-api-v1:${project.fabric_version}"

    // LWJGL 3.3.3 with extended ray tracing support
    def lwjglVersion = "3.3.3"
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-vulkan"
    
    // Windows natives
    runtimeOnly "org.lwjgl:lwjgl::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-glfw::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-opengl::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows"
    
    // Math library for vector operations
    implementation "org.joml:joml:1.10.5"
    
    // JSON handling for shader configurations
    implementation "com.google.code.gson:gson:2.10.1"
    
    // Optional: ModMenu integration for config GUI
    modImplementation "com.terraformersmc:modmenu:9.0.0"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            groupId = project.maven_group
            artifactId = project.archives_base_name
            version = project.version
            
            pom {
                name = 'RTX Mod'
                description = 'Hardware-accelerated ray tracing mod for Minecraft using OpenGL compute shaders'
                url = 'https://github.com/your-username/minecraft-rtx-fabric-mod'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'your-username'
                        name = 'Your Name'
                        email = 'your.email@example.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/your-username/minecraft-rtx-fabric-mod.git'
                    developerConnection = 'scm:git:ssh://github.com/your-username/minecraft-rtx-fabric-mod.git'
                    url = 'https://github.com/your-username/minecraft-rtx-fabric-mod'
                }
            }
        }
    }

    repositories {
        // GitHub Packages
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/your-username/minecraft-rtx-fabric-mod')
            credentials {
                username = project.findProperty('gpr.user') ?: System.getenv('USERNAME')
                password = project.findProperty('gpr.key') ?: System.getenv('TOKEN')
            }
        }
        
        // Local repository for testing
        maven {
            name = 'local'
            url = layout.buildDirectory.dir('repo')
        }
    }
}

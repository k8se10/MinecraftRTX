name: Build RTX Mod

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java: [17, 21]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run: ./gradlew build --no-daemon
      
    - name: Run tests
      run: ./gradlew test --no-daemon
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: matrix.java == 17
      with:
        name: rtx-mod-build
        path: build/libs/*.jar
        
    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: failure() && matrix.java == 17
      with:
        name: test-reports
        path: build/reports/tests/
        
  validate-mod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: rtx-mod-build
        path: build/libs/
        
    - name: Validate mod structure
      run: |
        echo "Validating mod JAR structure..."
        jar -tf build/libs/*.jar | grep -E "(fabric.mod.json|rtx-mod.mixins.json)" || exit 1
        echo "✅ Mod structure is valid"
        
    - name: Check for required classes
      run: |
        echo "Checking for required classes..."
        jar -tf build/libs/*.jar | grep -E "com/rtxmod/RTXMod.class" || exit 1
        jar -tf build/libs/*.jar | grep -E "com/rtxmod/RTXModClient.class" || exit 1
        jar -tf build/libs/*.jar | grep -E "com/rtxmod/rendering/RTXRenderer.class" || exit 1
        echo "✅ Required classes found"
        
  release:
    runs-on: ubuntu-latest
    needs: [build, validate-mod]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: Make gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Build release
      run: ./gradlew build --no-daemon
      
    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Rename JAR
      run: |
        cd build/libs
        mv *.jar rtx-mod-${{ steps.version.outputs.VERSION }}.jar
        
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/rtx-mod-${{ steps.version.outputs.VERSION }}.jar
        asset_name: rtx-mod-${{ steps.version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: Make gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Run SpotBugs
      run: ./gradlew spotbugsMain --no-daemon
      continue-on-error: true
      
    - name: Run Checkstyle
      run: ./gradlew checkstyleMain --no-daemon  
      continue-on-error: true
      
    - name: Upload code quality reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: code-quality-reports
        path: |
          build/reports/spotbugs/
          build/reports/checkstyle/
